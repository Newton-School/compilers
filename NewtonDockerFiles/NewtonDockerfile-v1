FROM judge0/compilers:1.4.0


# Check for latest version here: https://www.python.org/downloads
ENV PYTHON_FOR_ML_VERSIONS \
      3.10.4
RUN set -xe && \
    for VERSION in $PYTHON_FOR_ML_VERSIONS; do \
      curl -fSsL "https://www.python.org/ftp/python/$VERSION/Python-$VERSION.tar.xz" -o /tmp/python-$VERSION.tar.xz && \
      mkdir /tmp/python-$VERSION && \
      tar -xf /tmp/python-$VERSION.tar.xz -C /tmp/python-$VERSION --strip-components=1 && \
      rm /tmp/python-$VERSION.tar.xz && \
      cd /tmp/python-$VERSION && \
      ./configure \
        --prefix=/usr/local/python-$VERSION && \
      make -j$(nproc) && \
      make -j$(nproc) install && \
      rm -rf /tmp/*; \
    done

# Remove old node versions
ENV OLD_NODE_VERSIONS_TO_REMOVE \
      12.14.0
RUN set -xe && \
    for VERSION in $OLD_NODE_VERSIONS_TO_REMOVE; do \
      rm -rf /usr/local/node-$VERSION; \
    done

# Set node versions
ENV NODE_VERSION=20.9.0 \
    NODE_DISTRO=linux-x64 \
    NODE_PREFIX=/usr/local/node \
    LATEST_TYPESCRIPT_VERSION=5.8.3

# Download and install Node.js prebuilt binary
RUN set -eux; \
    curl -fsSL "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-$NODE_DISTRO.tar.xz" -o /tmp/node.tar.xz && \
    mkdir -p "$NODE_PREFIX-$NODE_VERSION" && \
    tar -xf /tmp/node.tar.xz -C "$NODE_PREFIX-$NODE_VERSION" --strip-components=1 && \
    ln -sf "$NODE_PREFIX-$NODE_VERSION/bin/node" /usr/local/bin/node && \
    ln -sf "$NODE_PREFIX-$NODE_VERSION/bin/npm" /usr/local/bin/npm && \
    ln -sf "$NODE_PREFIX-$NODE_VERSION/bin/npx" /usr/local/bin/npx && \
    rm -rf /tmp/node.tar.xz

# Install global TypeScript and related packages
RUN set -eux; \
    npm install -g \
        acorn \
        acorn-walk \
        typescript@$LATEST_TYPESCRIPT_VERSION && \
    npm cache clean --force

# Set global NODE_PATH for module resolution
ENV NODE_PATH="$NODE_PREFIX-$NODE_VERSION/lib/node_modules"


RUN set -xe && \
    apt-get update && \
    apt-get remove -y --no-install-recommends sqlite3 && \
    rm -rf /var/lib/apt/lists/*

RUN set -xe && \
    curl -fSsL "https://www.sqlite.org/2023/sqlite-autoconf-3410100.tar.gz" -o /tmp/sqlite-autoconf-3410100.tar.gz && \
    mkdir /tmp/sqlite-autoconf-3410100 && \
    tar -xf /tmp/sqlite-autoconf-3410100.tar.gz -C /tmp/sqlite-autoconf-3410100 --strip-components=1 && \
    rm /tmp/sqlite-autoconf-3410100.tar.gz && \
    cd /tmp/sqlite-autoconf-3410100 && \
    ./configure \
      --prefix=/usr/local/sqlite-autoconf-3410100 && \
    make -j$(nproc) && \
    make -j$(nproc) install && \
    rm -rf /tmp/*


ENV OLD_PYTHON_VERSIONS_TO_REMOVE \
      3.8.1
RUN set -xe && \
    for VERSION in $OLD_PYTHON_VERSIONS_TO_REMOVE; do \
      rm -rf /usr/local/python-$VERSION; \
    done


# Check for latest version here: https://www.python.org/downloads
ENV PYTHON_VERSIONS \
      3.11.4
RUN set -xe && \
    for VERSION in $PYTHON_VERSIONS; do \
      curl -fSsL "https://www.python.org/ftp/python/$VERSION/Python-$VERSION.tar.xz" -o /tmp/python-$VERSION.tar.xz && \
      mkdir /tmp/python-$VERSION && \
      tar -xf /tmp/python-$VERSION.tar.xz -C /tmp/python-$VERSION --strip-components=1 && \
      rm /tmp/python-$VERSION.tar.xz && \
      cd /tmp/python-$VERSION && \
      ./configure \
        --prefix=/usr/local/python-$VERSION && \
      make -j$(nproc) && \
      make -j$(nproc) install && \
      rm -rf /tmp/*; \
    done

# Build nand2tetris using Node.js 20
RUN set -eux; \
    cd /usr/local/lib && \
    git clone https://github.com/Newton-School/nand2tetris-web-ide.git && \
    cd nand2tetris-web-ide && \
    npm install && \
    npm run build && \
    npm install -g ./cli
RUN ln -sf /usr/local/node-20.9.0/bin/nand2tetris /usr/local/bin/nand2tetris

# ───── add Mars (MIPS) support ──────────────────────────────────────────
RUN set -xe && \
    mkdir -p /usr/local/mars && \
    curl -fSsL "https://github.com/dpetersanderson/MARS/releases/download/v.4.5.1/Mars4_5.jar" \
         -o /usr/local/mars/mars.jar && \
    chmod 655 /usr/local/mars/mars.jar
# ────────────────────────────────────────────────────────────────────────

# Python for ML
RUN apt-get update && \
    /usr/local/python-3.10.4/bin/pip3 install \
        mlxtend \
        numpy \
        pandas \
        scikit-learn \
        pytest \
        scipy \
        matplotlib \
        gspread \
        bs4 \
        seaborn \
        xgboost \
        Pillow \
        urllib3 \
        statistics \
        requests \
        qiskit \
        qutip \
        qiskit-aer && \
    rm -rf /var/lib/apt/lists/*